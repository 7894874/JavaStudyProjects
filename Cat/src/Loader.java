/***
 *  * Выведите в консоль вес созданных кошек.
 * Покормите двух кошек, после этого распечатайте их вес (убедитесь, что вес изменился).
 * Перекормите кошку, чтобы ее статус стал Exploded.
 * «Замяукайте» кошку до статуса Dead.
 * Отправьте в репозиторий Git коммит с выполненным заданием.
 */


public class Loader
{
    public static void main(String[] args)
    {

        /***
         * Что нужно сделать
         *
         * Создайте в классе Cat метод, который возвращает сумму съеденной еды текущей кошки.
         * Создайте в классе Cat метод «Сходить в туалет» pee(), который уменьшает вес кошки и что-нибудь печатает.
         * Отправьте в репозиторий Git коммит с выполненным заданием.
         * Рекомендации
         *
         * Протестируйте верную работу метода возврата съеденной еды:
         *
         * Создайте кошку.
         * Покормите кошку кормом весом 150.00 и 100.0 грамм.
         * Вызовите метод pee() несколько раз.
         * Распечатайте значение съеденного корма, в консоль должно быть выведено значение: 250.00 граммов.
         * Отправьте в репозиторий Git коммит с выполненным заданием.
         */

        /***
         * Урок 3. Статические методы и переменные
         *
         * Цель задания
         * Научиться создавать статическую переменную и управлять ей, используя условный оператор if.
         *
         * Что нужно сделать
         * Создайте у класса Cat статическую переменную count, которая увеличивается на 1, если кошку создали, и убывает на 1, если кошка взорвалась или умерла.
         * Создайте статический метод getCount(), который возвращает количество кошек.
         * Отправьте в репозиторий Git коммит с выполненным заданием.
         *
         * Дополнительное задание
         *
         * Придумайте способ, который поможет проверить, жива ли кошка, на основе значения её веса.
         * Используя это, запретите неживой кошке есть, пить, ходить в туалет, выполняя проверку веса внутри методов,
         * которые изменяют вес кошки.
         *
         */

        ///// Нажимаем на кнопку пульта управления (1) :-)))
        Logicalfunctions.makeSecondTaskAndThird();

        ///// Нажимаем на кнопку пульта управления (2)
        ///// Павел, тут пока решил оставить, ибо не понятно пока замечание (метод ведь отрабатывает хорошо, корректно выводит информацию)
        // /  Задал вопрос в гитлабе
        //// Мне нужно было сделать нечто вроде отчета, я сделал это через робота информатора...
        System.out.println(Cat.info());

        /**
         Урок 4. Константы и Enum

         Цель задания

         Научиться создавать константы в классе и Enum.

         Что нужно сделать

         Создайте в классе Cat константы: «количество глаз», «минимальный вес», «максимальный вес».
         Создайте enum Color с окрасами кошек.
         Отправьте в репозиторий Git коммит с выполненным заданием.

         */

        getKitten("Murka", "BLACK", 1100);
        getKitten("Palma", "WHITE", 1400);
        Cat pushok = getKitten("Pushok", "GREY", 1700);
        Cat pushokCopyAfterFix = pushok.getCopyOfCat(pushok);

        System.out.println("Full copy of cat "+pushok.getName()+" \nCheck:\noriginal "+pushok+"\ncopy "+pushokCopyAfterFix);




       ///// Делаем отдельный класс, копия кота, он будет нам делать
       ///// нужную копию любого кота или кошки ) Создаем точную копию кошки (Имя, Вес, Цвет)
        //// Не стал использовать сеттеры, сразу устанавливаю нужные значения копии в конструкторе
        ///// для меня показалось это очень удобным и очень понравилось :-)
        CatCopy pushokCopy2 = getCopyOfCat(pushok);
       ///// Тут можно было бы дальше продолжать передавать параметры, использовать счетчики котов и так далее...
       ///// получать данные геттарами и устанавливать сеттарами
        /// продолжать эксперименты с но уже копией кошки до бесконечности)
        //// мне тут все понятно хотел бы приступить к более сложным задачам.
       if (pushokCopy2.getCatCopyAliveStatus() == true) {
           pushokCopy2.meow();
       }

    }

    ////  Создал согласно 4 - 5 заданию
    private static Cat getKitten(String  someName, String someClr, double someWeight) {

        Cat cat = new Cat(someName, CatsCollors.valueOf(someClr), someWeight);
        System.out.println("Created "+cat.getWeight()+" with name  " +cat.getName() + " and collor "+ cat.getCatsCollors());

        return cat;
    }

    private static CatCopy getCopyOfCat(Cat cp) {

        CatCopy cat = new CatCopy(cp.getName(), cp.getWeight(), cp.getCatsCollors());

       return cat;

    }



}