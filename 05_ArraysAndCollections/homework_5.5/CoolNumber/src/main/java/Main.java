public class Main {

    /**
     1. Реализуйте метод генерации «красивых» автомобильных номеров generateCoolNumbers() в классе CoolNumbers.
     Используйте следующие правила генерации номеров:

     XYZ — различный набор из списка разрешенных букв, N — цифры, R — регион (от 01 до 199);
     XNNNYZR — пример: A111BC197, У777HC66.
     В госномерах автомобилей в РФ используются следующие буквы: А, В, Е, К, М, Н, О, Р, С, Т, У, Х

     2. Реализуйте методы поиска класса CoolNumbers по поиску номеров в каждой коллекции:

     прямым перебором по ArrayList,
     бинарным поиском по сортированному ArrayList,
     поиском в HashSet,
     поиском в TreeSet.

     3. Измерьте и выведите длительность каждого метода поиска.

     Формат вывода результатов поиска:
     Поиск перебором: номер найден/не найден, поиск занял 34нс
     Бинарный поиск: номер найден/не найден, поиск занял 34нс
     Поиск в HashSet: номер найден/не найден, поиск занял 34нс
     Поиск в TreeSet: номер найден/не найден, поиск занял 34нс

     4. Напишите в форме ответа, какой поиск — самый быстрый, а какой — самый медленный.

     В видео Поиск и сортировка неточно указана оценка результата работы метода бинарного
     поиска Collections.binarySearch(). Метод возвращает int, если возвращаемое значение больше или
     равно нулю — это означает, что элемент найден.
     Если возвращаемое значение int меньше нуля — элемент в коллекции не найден.

     Рекомендации

     сортировка не входит в учёт времени для бинарного поиска;
     для детального сравнения методов поиска используйте время в наносекундах:   System.nanoTime()


     **/



    /*
    TODO:
     - реализовать методы класса CoolNumbers
     - посчитать время поиска введимого номера в консоль в каждой из структуры данных
     - проанализоровать полученные данные
     */

    public static void main(String[] args) {

      //  for (int i = 1; i <= 100000; i++) {
      //      System.out.println(CoolNumbers.generateCoolNumbers());
      //  }

        System.out.println(CoolNumbers.generateCoolNumbers().toString());

    }
}
