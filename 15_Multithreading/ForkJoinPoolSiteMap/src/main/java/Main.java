import java.util.List;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.TimeUnit;

public class Main {

    public static void main(String[] args) {

        /* Было
        new BasicWebCrawler().getPageLinks("https://lenta.ru/");
        */

        //Create ForkJoinPool using the default constructor.
        /// Создаем Fork Join Pool используя конструктор
        ForkJoinPool pool = new ForkJoinPool();

        /// Создаем Процессор с заданиями. Инициализируем каждое задание
        BasicWebCrawlerProcessor system = new BasicWebCrawlerProcessor("https://lenta.ru/", "C:\\tmp\\test2.txt");

        pool.execute(system);

        /// Пишем в консоль информацию о статусе пула каждую секунду до тех пор не закончится выполнение заданий
        do
        {
            System.out.printf("******************************************\n");
            System.out.printf("Main: Parallelism: %d\n", pool.getParallelism());
            System.out.printf("Main: Active Threads: %d\n", pool.getActiveThreadCount());
            System.out.printf("Main: Task Count: %d\n", pool.getQueuedTaskCount());
            System.out.printf("Main: Steal Count: %d\n", pool.getStealCount());
            System.out.printf("******************************************\n");
            try
            {
                TimeUnit.SECONDS.sleep(1);
            } catch (InterruptedException e)
            {
                e.printStackTrace();
            }
        } while (!system.isDone());
        //// Это не что иное, как бесконечный цикл длящийся до тех пор, пока не выполняется каждое из заданий
        //Shut down ForkJoinPool using the shutdown() method.
        // Выключаем пул используя метод shutdown()
        pool.shutdown();
        //Write the number of results generated by each task to the console.
        //// Пишем количество получившихся результатов от каждого задания в консоль
        List<String> results;

        System.out.println("/////////////////////////////////////// Results /////////////////////////////////////////");
        //  results = system.join();
         // System.out.printf("System: %d files found.\n", results.size());

    }
}
