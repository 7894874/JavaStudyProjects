import java.util.concurrent.ForkJoinPool;

public class Main {

    public static void main(String[] args) {

        //// Fork и Join по сути это ответвление и объединение потоков
        //// оно нужно для увеличения уменьшения количества потоков в вашем приложении
        //// в всевозможных рекурсивных алгоритмах
        //// ForkJoinPoll - как раз является основным центральным классом
        //// в этом классе как раз реализована логика распределения пула потоков

        //// Для того, чтобы понять как он работает, представим, что нужно подсчитать сумму значений во всем дереве Node

        Node root = null; //// метод должен работать только если значение root не null!!!

        //// Создаем ForkJoinPool и вызываем у него задачу с помощью метода invoke от корневого узла
        long sum = new ForkJoinPool().invoke(new NodeValueSumCalculator(root));
        //// Этот метод нам вернет общую сумму по всему нашему дереву
        System.out.println(sum);
    }
}
